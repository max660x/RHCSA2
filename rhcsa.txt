Example Exam 1:
1. Assuming the root user password is lost for C1 and your system is running in multiuser.target with no current root session open.
Boot your system into an appropriate target and chage the root user password to root1234
Solution:
		1] In the GRUB boot menu, press e on your current OS to modify its settings
		2] Search the line which starts with "linux" and edit it deleting the words "quiet" and "rhgb", also append 			"init=/bin/sh" at the end of this same line
		3] Press the combination "Ctrl+X" to reboot the system using the specified options.
		4] In the new shell, load the installed SELinux policies with the command "/usr/sbin/load_policy -i"
		5] Remount the filesystem in rw mode with "mount -o remount,rw /"
		6] Finally issue the "passwd root" command and modify the root password as you like
		7] Remount the filesystem in read-only mode with "mount -o remount,ro /"
		8] Finally reboot your system with "exec /sbin/init 6"
		9] Login to the system with the new password

2. Configure the primary network interface with hostname c1.home.local (alias rhcsa1)
	IP 192.168.0.121/24
	gtw 192.168.0.1/24
	dns 192.168.0.1/24
Solution:
olution:
	1. "ifconfig" or "ip a" to show which interface you need to modify
	2. vi to /etc/sysconfig/network-scripts/ifcfg-INTERFACENAME
	3. Edit the file according the following:
		BOOTPROTO=STATIC
		ONBOOT=YES
		IPADDR= 192.168.0.121
		NETMASK= 255.255.255.0
		GATEWAY= 192.168.0.1
	4. then systemctl restart network
	5. vi to /etc/resolv.conf
		nameserver 192.168.0.1
	6. to test it try to ping something with a name
3. Set default boot target to multiuser
Solution:
		1] Check the actual default target with "systemctl get-default"
		2] Change the default target issuing the command "systemctl set-default multi-user.target"
		3] Verify that you have succeeded in the process with "ls -l /etc/systemd/system/default.target"(you should see a 		  symbolic link to the multi-user.target file)
		
4. Set SELinux to enforcing mode
	1. Show the current status with sestatus
	2. Setenforce enforcing
	3. To make it permanent edit with vi /etc/sysconfig/selinux then SELINUX=enforcing
5. Perform a case insensitive search for the pattern "then" in the /etc/profile and save the result in the 
/var/tmp/pattern.txt.
Make sure that empty lines are not included 
Solution: 
		1] To start off, you should perform a case-insensitive search and redirect the output to the second file. To do 		this, launch the command "touch /var/tmp/pattern.txt", then create the pipeline "cat /etc/profile | grep -i then                   		   > /var/tmp/pattern.txt"	
		2] We can then use sed to erase all blank lines from the file with the command "sed -i '/^$/d' /var/tmp			        /pattern.txt"
		3] Check your result with "cat /var/tmp/pattern.txt" 
		
6. Activate and start firewalld
	1. Systemctl enable firewalld                #use --now option on rhel
	2. Systemctl start firewalld		     #use --now option on rhel
	
7. Set the primary command prompt for user root to display the hostname, username, and current working directory information in that order
Solution:
		1] To avoid any mistake, let's backup the ~/.bashrc file with "cp ~/.bashrc ~/.bashrc.backup"
		2] Now, we open the config file with "vi ~/.bashrc"
		3] Let's add at the end of the file the line "export "PS1=h\u@\w> ""
		4] Issue the command "source ~/.bashrc" to apply those changes
	
8. Create users barry, harry, larry, marry and gary with home directories in /home. Set their passwords to Temp123$ and make accounts for mary and barry expire on December 31, 2017. Users larry and gary should have their secondary groups set to to group dba (create this group if it does not exist)
	1. useradd -m -e YYYY-MM-DD -p PASSWORD username.             # use -u UID to use a uid useful for later exercises -m is used to specify the creation of a home directory
	2. groupadd GROUPNAME					      # use -g to assign a GID
	3. Useradd -G GROUPNAME	username			      # usermod -a -G GROUPNAME USERNAME to add the user to the specified group
								      # usermod -g GROUPNAME to assign to logged user a primary group 
9. Create a directory called testdir2 as user mary in her home directory and set default ACLs on it for user barry for read and write access.
Solution:
		1] Let's switch to user mary with "su mary" (if the user exists) and move to its home directory with "cd ~"
		2] Let's create the directory with "mkdir testdir2"
		3] We will need barry's UID to set ACLs, we can do this by using the command "less /etc/passwd", the third field 		 of each entry is the UID of the selected user, we need to remember barry's UID
		4] We can now set the acl with "aetfacl -m u:UID(visto prima):/home/mary/testdir2"
		5] To check if the ACL are active you can use "getfacl /home/mary/testdir2"
10. Set up a FTP yum repository in the /var/ftp/pub/rhel7 directory on hv1, and configure a repo on rhcsal

11. Create a logical volume called linuxadm of size equal to 10 LEs in vgtest volume group (create vgtest with PE size 32MB) with mount point /mnt/linuxadm and xfs file system structures. Create a file called linuxadminfile in the mount point. Set the file system to automatically mount at each system reboot.
Solution: 
		1] 
		
12. Add a group called linuxadmin and change group membership on /mnt/linuxadm to linuxadmin. Set read/write/execute permissions on /linuxadm for the owner and group members, and no permissions for others.
13. Extend linuxadm file system in vgtest online by 35 MB without losing any data
14. Create a swap partition of size 65 MB on an available disk. Use its UUID and ensure it is activated after every system reboot.
15. Create a standard partition of size 60 MB on any available disk and format it with ext4 file system structures. Mount the file system on /mnt/stdext persistently using its UUID. Create a file called stdextfile in the mount point
16. Create a directory /direct01 and apply SELinux contexts for /root on it
Solution:
		1] Create the directory with "mkdir direct01"
		2] Check its SELinux context with ls -dZ /direct01
		3] Check /root's SELinux context with ls -dZ /root
		4] We can now copy /root's SELinux context with "chcon --reference=/root /direct01"
		5] Let's check the SELinux context for both directories to see if they match
17. Set up a cron job as the root user to search for core files in the /var directory and list them in /var/log/corefiles. This job should run every Monday at 1:20am system time
Solution:
		1] We start by creating the file in which the script should work with "touch /var/log/corefiles"
		2] We run crontab -l to check if there is any chrond jobs active
		3] We issue the command "crontab -u root -e" to edit root's chrond routine
		4] We add the line "20 1 * * 1 find /var -name core > /var/log/corefiles" and save our configuration
		5] We check if the job has been scheduled with "crontab -l"
18. Use star and gzip to create a compressed archive of the /usr/local directory. Store the archive in /root using any name of your choice
19. Enable at access for user barry and deny for user gary
Solution:
		1] To restrict at access we need to search for the configuration file with "ls -la /etc | grep at.*"
		2] If we find the at.allow file, we add "barry" as plain text to it (use vim)
		3] If we find the at.deny file, we add "gary" as plain text to it (use vim)
		4] We can check if everything worked properly by switching user with "su -" and by issuing the "at" command
		
20. Modify the bootloader and set the default autoboot timer value to 2 seconds 
